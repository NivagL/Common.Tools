name: Build nuget model

on:
  workflow_dispatch:
    inputs:
      project:
        description: 'The name of the project'
        required: true
        type: string
      version:
        description: 'The build version'
        required: true
        type: string
  workflow_call:
    inputs:
      project:
        description: 'The name of the project'
        required: true
        type: string
      version:
        description: 'The build version'
        required: true
        type: string
    secrets:
      GH_PACKAGES:
        description: 'GitHub Packages token'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

###############################################################
## Dependencies
###############################################################
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
    
      - name: Restore .NET tools
        run: dotnet tool restore --configfile nuget.config || true
        working-directory: ${{ github.workspace }}/.
    
      - name: Restore dependencies
        run: dotnet restore --configfile nuget.config
        working-directory: ${{ github.workspace }}/.
    
###############################################################
## Build 
###############################################################
      - name: Build
        run: dotnet build --configuration Release -p:Version=${{ inputs.version }} -p:AssemblyVersion=${{ inputs.version }} -p:FileVersion=${{ inputs.version }} -p:PackageVersion=${{ inputs.version }} -p:NuGetVersion=${{ inputs.version }}
        working-directory: ${{ github.workspace }}/.

      - name: Build and Generate TypeScript files
        run: dotnet build **/${{ input.project }}.csproj --configuration Release -p:Version=${{ inputs.version }} -p:AssemblyVersion=${{ inputs.version }} -p:FileVersion=${{ inputs.version }} -p:PackageVersion=${{ inputs.version }} -p:NuGetVersion=${{ inputs.version }} /t:TypescriptGen
        working-directory: ${{ github.workspace }}/.
    
###############################################################
## Unit Test 
###############################################################
      - name: Test
        run: dotnet test --configuration Release --no-build --filter "TestCategory=Unit"
        working-directory: ${{ github.workspace }}/.

###############################################################
## Push package
###############################################################
      - name: Remove existing GitHub Packages source if present
        run: dotnet nuget remove source github || true
        working-directory: ${{ github.workspace }}/.
        
      - name: Add GitHub Packages source
        run: dotnet nuget add source --username ${{ github.actor }} --password ${{ secrets.GH_PACKAGES }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
        working-directory: ${{ github.workspace }}/.
   
      - name: Push to GitHub Packages
        run: dotnet nuget push ./**/bin/Release/*.nupkg --source github --skip-duplicate
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GH_PACKAGES }}
        working-directory: ${{ github.workspace }}/.

###############################################################
## Upload artifact for npm build
###############################################################
      - name: List workspace output files
        run: ls -R ${{ github.workspace }}/npm/src

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-typescript-artifact
          path: ${{ github.workspace }}/npm
